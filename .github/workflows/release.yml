name: 🚀 Release Build

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_NAME: 'OtomatikMetinGenisletici'
  SOLUTION_FILE: 'OtomatikMetinGenisletici.sln'

jobs:
  build-and-release:
    name: 🏗️ Build and Release
    runs-on: windows-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 📦 Restore Dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: 🏗️ Build Solution
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

    - name: 🧪 Run Tests
      run: dotnet test ${{ env.SOLUTION_FILE }} --configuration Release --no-build --verbosity normal
      continue-on-error: true

    - name: 📦 Publish Self-Contained
      run: |
        dotnet publish ${{ env.PROJECT_NAME }}.csproj `
          --configuration Release `
          --runtime win-x64 `
          --self-contained true `
          --output ./publish `
          --verbosity normal

    - name: 📋 List Published Files
      run: |
        Write-Host "📁 Published files:"
        Get-ChildItem -Path ./publish -Recurse | ForEach-Object { Write-Host "  $($_.FullName)" }

    - name: 🗜️ Create Release Archive
      run: |
        $version = "${{ github.ref_name }}"
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
          $version = "${{ github.event.inputs.version }}"
        }
        $archiveName = "Text-Expander-$version-win-x64.zip"
        Compress-Archive -Path "./publish/*" -DestinationPath "./$archiveName" -Force
        Write-Host "✅ Created archive: $archiveName"
        echo "ARCHIVE_NAME=$archiveName" >> $env:GITHUB_ENV

    - name: 📊 Calculate File Hashes
      run: |
        $hash = Get-FileHash -Path "./${{ env.ARCHIVE_NAME }}" -Algorithm SHA256
        Write-Host "🔐 SHA256: $($hash.Hash)"
        echo "FILE_HASH=$($hash.Hash)" >> $env:GITHUB_ENV

    - name: 📝 Generate Release Notes
      id: release_notes
      run: |
        $version = "${{ github.ref_name }}"
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
          $version = "${{ github.event.inputs.version }}"
        }
        
        $releaseNotes = @"
        # 🚀 Text Expander $version

        ## 📦 Downloads
        - **Windows (x64)**: [${{ env.ARCHIVE_NAME }}]
        - **Size**: $(Get-Item "./${{ env.ARCHIVE_NAME }}" | Select-Object -ExpandProperty Length | ForEach-Object { [math]::Round($_ / 1MB, 2) }) MB
        - **SHA256**: ``${{ env.FILE_HASH }}``

        ## 🎯 Quick Start
        1. Download the zip file above
        2. Extract to your preferred location
        3. Run ``OtomatikMetinGenisletici.exe`` as Administrator
        4. Start creating shortcuts and boost your productivity!

        ## ✨ What's New
        - 🔤 Intelligent text expansion system
        - 🧠 AI-powered smart suggestions
        - 🎨 Modern WPF interface
        - ⚙️ Advanced configuration options
        - 🛡️ 100% local operation (no internet required)

        ## 📋 System Requirements
        - Windows 10 (1903+) or Windows 11
        - x64 architecture
        - 512MB RAM minimum
        - Administrator privileges

        ## 🔒 Security Note
        This application uses keyboard hooks for system-wide text expansion. Some antivirus software may flag it as potentially unwanted. This is a false positive - the application is completely safe and open source.

        ## 🐛 Known Issues
        - Windows Defender may show a warning (add to exclusions)
        - Requires administrator rights for global keyboard monitoring

        ---

        **📚 Full Documentation**: [README.md](https://github.com/${{ github.repository }}/blob/main/README.md)
        **🐛 Report Issues**: [Issues](https://github.com/${{ github.repository }}/issues)
        **💬 Discussions**: [Discussions](https://github.com/${{ github.repository }}/discussions)
        "@

        # Save to file for GitHub release
        $releaseNotes | Out-File -FilePath "./release-notes.md" -Encoding UTF8
        Write-Host "📝 Release notes generated"

    - name: 🚀 Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name || github.event.inputs.version }}
        name: "Text Expander ${{ github.ref_name || github.event.inputs.version }}"
        body_path: "./release-notes.md"
        files: |
          ./${{ env.ARCHIVE_NAME }}
          ./CHANGELOG.md
          ./README.md
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 📊 Release Summary
      run: |
        Write-Host "🎉 Release completed successfully!"
        Write-Host "📦 Archive: ${{ env.ARCHIVE_NAME }}"
        Write-Host "🔐 SHA256: ${{ env.FILE_HASH }}"
        Write-Host "🏷️ Tag: ${{ github.ref_name || github.event.inputs.version }}"
        Write-Host "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name || github.event.inputs.version }}"
